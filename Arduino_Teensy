#include "DHT.h"
//#include <SoftwareSerial.h>

#define DHTPIN 21      // Digital pin connected to the DHT sensor
#define DHTTYPE DHT11   // DHT 11

#define LEDPIN 11  //TEMPERATURE

DHT dht(DHTPIN, DHTTYPE);

// Teensy 5V <--> HC-05 Vcc
// Teensy Ground <--> HC-05 GND
#define rxPin 7 // Teensy pin 7 <--> HC-05 Tx
#define txPin 8 // Teensy pin 8 <--> HC-05 Rx
//SoftwareSerial BTSerial =  SoftwareSerial(rxPin, txPin);


//LED
const int ledPin = 12; // RED LED


// Variables will change :
int ledState = LOW;             // ledState used to set the LED

// Generally, you should use "unsigned long" for variables that hold time
// The value will quickly become too large for an int to store
unsigned long previousMillis = 0;        // will store last time LED was updated

// constants won't change :
const long interval = 1000;           // interval at which to blink (milliseconds)


const int hot = 30; //set hot parameter
const int cold = 25; //set cold parameter


void setup() {
  // Setup serial for monitor
  Serial.begin(9600); 

  // Setup DHT Sensor
  pinMode(DHTPIN, INPUT);
  dht.begin();

  // Setup Serial1 for BlueTooth
  Serial1.begin(9600); // Default communication rate of the Bluetooth module

   // initialize the digital pin as an output.
  pinMode(ledPin, OUTPUT);

//  pinMode(12, OUTPUT); //red
}

void loop() {
  
  //trial
  int sensor = analogRead(A2);
  float voltage = (sensor / 1024.0) * 5.0;
  float tempC = (voltage - .5) * 100;
  //float tempF = (tempC * 1.8) + 32;

  
  unsigned long currentMillis = millis();
  
  if(Serial1.available() > 0){ // Checks whether data is comming from the serial port
    digitalWrite(LEDPIN, HIGH);

    
    float h = dht.readHumidity();
    float t = dht.readTemperature();
    //float f = dht.readTemperature(true);

    //float hif = dht.computeHeatIndex(f, h);
    //float hic = dht.computeHeatIndex(t, h, false);  
    
    //Serial.print(F(" Humidity: "));
    //Serial.print(h);
    Serial.print(F(""));
    Serial.print(t);
    //Serial.print(F("C "));
    //Serial.print(f);
    //Serial.print(F("F  Heat index: "));
    //Serial.print(hic);
    //Serial.print(F("C "));
    //Serial.print(hif);
    Serial.println(F(""));

    //Serial1.print(F(" Humidity: "));
    //Serial1.print(h);
    Serial1.print(F(""));
    Serial1.print(t);
    //Serial1.print(F("C "));
    //Serial1.print(f);
    //Serial1.print(F("F  Heat index: "));
    //Serial1.print(hic);
    //Serial1.print(F("C "));
    //Serial1.print(hif);
    Serial1.println(F(""));
    Serial.print("temp: ");
    
    Serial.print(t);
    if (t < cold) { //cold
      digitalWrite(ledPin, HIGH);
      digitalWrite(3, LOW);
      digitalWrite(4, LOW);
      Serial.println(" It's Cold.");
    }
    else if (t >= hot) { //hot
      digitalWrite(ledPin, HIGH);
      Serial.println(" It's Hot.");
    }
    else { //fine
      digitalWrite(ledPin, LOW);
      Serial.println(" It's Fine.");
    }

    
    delay(1000);
    digitalWrite(LEDPIN, LOW);
    delay(1000);

    
// }
//   if (currentMillis - previousMillis >= interval) {
    // save the last time you blinked the LED
//    previousMillis = currentMillis;

    // if the LED is off turn it on and vice-versa:
//    if (ledState == LOW) {
//      ledState = HIGH;
//    } else {
//      ledState = LOW;
//    }

    // set the LED with the ledState of the variable:
//    digitalWrite(ledPin, ledState);
  }
}
